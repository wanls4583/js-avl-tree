{"version":3,"sources":["webpack:///webpack/bootstrap 7790f42fc0259a0263b9","webpack:///./src/example/main.js","webpack:///./src/avl.js"],"names":["testInsert","console","log","t","Date","now","tree","AVLTree","size","i","insert","testDelete","retains","push","Math","random","indexOf","delete","testSeach","tmp","search","testPreNext","first","last","key","next","pre","node","draw","root","ctx","document","querySelector","getContext","width","height","lineWidth","font","textAlign","_draw","pNode","x","y","lChild","w","beginPath","globalCompositeOperation","fillStyle","arc","PI","fill","strokeStyle","stroke","closePath","fillText","moveTo","lineTo","rChild","testCompartor","compartor","arg1","arg2","AVLNode","data","ifMerge","_proto","prototype","result","_insert","ifAll","_result","_delete","_search","_checkBalance","_setHeight","child","_getHeight","_change","_lRotate","rc","_rRotate","lc","_lrRotate","_rlRotate","node1","node2","props","max","window"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AAAA;AAAA;;AAEA,SAASA,UAAT,GAAsB;AAClBC,YAAQC,GAAR,CAAY,cAAZ,EAA4B,WAA5B;AACA,QAAIC,IAAIC,KAAKC,GAAL,EAAR;AACA,QAAIC,OAAO,IAAIC,wDAAJ,EAAX;AACA,QAAIC,OAAO,MAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5BH,aAAKI,MAAL,CAAYD,CAAZ,EAAe,UAAUA,CAAzB;AACH;AACDR,YAAQC,GAAR,CAAYI,IAAZ;AACAL,YAAQC,GAAR,CAAY,MAAZ,EAAoBE,KAAKC,GAAL,KAAaF,CAAjC;AACAF,YAAQC,GAAR,CAAY,0CAAZ;AACH;;AAED,SAASS,UAAT,GAAsB;AAClBV,YAAQC,GAAR,CAAY,cAAZ,EAA4B,WAA5B;AACA,QAAII,OAAO,IAAIC,wDAAJ,EAAX;AACA,QAAIC,OAAO,KAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5BH,aAAKI,MAAL,CAAYD,CAAZ,EAAe,UAAUA,CAAzB;AACH;AACD,QAAIG,UAAU,EAAd;AACA;AACA,SAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxBG,gBAAQC,IAAR,CAAcC,KAAKC,MAAL,KAAgBP,IAAjB,IAA0B,CAAvC;AACH;AACDP,YAAQC,GAAR,CAAY,SAAZ,EAAuBU,OAAvB;AACA,SAAK,IAAIH,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5B,YAAIG,QAAQI,OAAR,CAAgBP,CAAhB,KAAsB,CAAC,CAA3B,EAA8B;AAC1BH,iBAAKW,MAAL,CAAYR,CAAZ;AACH;AACJ;AACDR,YAAQC,GAAR,CAAYI,IAAZ;AACAL,YAAQC,GAAR,CAAY,0CAAZ;AACH;;AAED,SAASgB,SAAT,GAAqB;AACjBjB,YAAQC,GAAR,CAAY,aAAZ,EAA2B,WAA3B;AACA,QAAII,OAAO,IAAIC,wDAAJ,EAAX;AACA,QAAIC,OAAO,KAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5BH,aAAKI,MAAL,CAAYD,CAAZ,EAAe,UAAUA,CAAzB;AACH;AACD,SAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AACxB,YAAIU,MAAOL,KAAKC,MAAL,KAAgBP,IAAjB,IAA0B,CAApC;AACAP,gBAAQC,GAAR,CAAY,KAAZ,EAAmBiB,GAAnB,EAAwBb,KAAKc,MAAL,CAAYD,GAAZ,CAAxB;AACH;AACDlB,YAAQC,GAAR,CAAY,0CAAZ;AACH;;AAED,SAASmB,WAAT,GAAuB;AACnBpB,YAAQC,GAAR,CAAY,eAAZ,EAA6B,WAA7B;AACA,QAAII,OAAO,IAAIC,wDAAJ,EAAX;AACA,QAAIC,OAAO,KAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5BH,aAAKI,MAAL,CAAYD,CAAZ,EAAe,UAAUA,CAAzB;AACH;AACD,QAAIU,MAAOL,KAAKC,MAAL,KAAgBP,IAAjB,IAA0B,CAApC;AACA,QAAIc,QAAQhB,KAAKc,MAAL,CAAYD,GAAZ,CAAZ;AACA,QAAII,OAAOD,KAAX;AACAH,UAAM,EAAN;;AAEAlB,YAAQC,GAAR,CAAY,MAAZ;AACA,SAAK,IAAIO,IAAI,CAAb,EAAgBa,SAASb,IAAI,CAA7B,EAAgCA,GAAhC,EAAqC;AACjCU,YAAIN,IAAJ,CAASS,MAAME,GAAf;AACAF,gBAAQA,MAAMG,IAAd;AACH;AACDxB,YAAQC,GAAR,CAAYiB,GAAZ;;AAEAlB,YAAQC,GAAR,CAAY,KAAZ;AACAiB,UAAM,EAAN;AACA,SAAK,IAAIV,IAAI,CAAb,EAAgBc,QAAQd,IAAI,CAA5B,EAA+BA,GAA/B,EAAoC;AAChCU,YAAIN,IAAJ,CAASU,KAAKC,GAAd;AACAD,eAAOA,KAAKG,GAAZ;AACH;AACDzB,YAAQC,GAAR,CAAYiB,GAAZ;;AAEA,QAAIA,MAAOL,KAAKC,MAAL,KAAgBP,IAAjB,IAA0B,CAApC;AACAP,YAAQC,GAAR,CAAY,cAAZ,EAA4BiB,GAA5B;AACAb,SAAKW,MAAL,CAAYE,GAAZ;AACA,QAAIQ,OAAOrB,KAAKc,MAAL,CAAYD,MAAM,CAAlB,CAAX;AACAA,UAAM,EAAN;AACAA,QAAIN,IAAJ,CAASc,KAAKD,GAAL,IAAYC,KAAKD,GAAL,CAASA,GAArB,IAA4BC,KAAKD,GAAL,CAASA,GAAT,CAAaF,GAAlD;AACAL,QAAIN,IAAJ,CAASc,KAAKD,GAAL,IAAYC,KAAKD,GAAL,CAASF,GAA9B;AACAL,QAAIN,IAAJ,CAASc,KAAKH,GAAd;AACAL,QAAIN,IAAJ,CAASc,KAAKF,IAAL,IAAaE,KAAKF,IAAL,CAAUD,GAAhC;AACAL,QAAIN,IAAJ,CAASc,KAAKF,IAAL,IAAaE,KAAKF,IAAL,CAAUA,IAAvB,IAA+BE,KAAKF,IAAL,CAAUA,IAAV,CAAeD,GAAvD;AACAvB,YAAQC,GAAR,CAAYiB,GAAZ;AACAlB,YAAQC,GAAR,CAAY,0CAAZ;AACH;;AAED;AACA,SAAS0B,IAAT,GAAgB;AACZ3B,YAAQC,GAAR,CAAY,QAAZ,EAAsB,WAAtB;AACA,QAAII,OAAO,IAAIC,wDAAJ,EAAX;AACA,QAAIC,OAAO,EAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5BH,aAAKI,MAAL,CAAYD,CAAZ,EAAe,UAAUA,CAAzB;AACH;AACDR,YAAQC,GAAR,CAAYI,KAAKuB,IAAjB;AACA,QAAIC,MAAMC,SAASC,aAAT,CAAuB,SAAvB,EAAkCC,UAAlC,CAA6C,IAA7C,CAAV;AACA,QAAIC,QAAQ,GAAZ;AACA,QAAIC,SAAS7B,KAAKuB,IAAL,CAAUM,MAAvB;AACAL,QAAIM,SAAJ,GAAgB,CAAhB;AACAN,QAAIO,IAAJ,GAAW,WAAX;AACAP,QAAIQ,SAAJ,GAAgB,QAAhB;AACAC,UAAMjC,KAAKuB,IAAX;AACA5B,YAAQC,GAAR,CAAY,0CAAZ;;AAEA,aAASqC,KAAT,CAAeZ,IAAf,EAAqB;AACjB,YAAI,CAACA,IAAL,EAAW;AACP;AACH;AACD,YAAI,CAACA,KAAKa,KAAV,EAAiB;AACbb,iBAAKc,CAAL,GAAS,GAAT;AACAd,iBAAKe,CAAL,GAAS,EAAT;AACH,SAHD,MAGO,IAAIf,KAAKa,KAAL,CAAWG,MAAX,IAAqBhB,IAAzB,EAA+B;AAClC,gBAAIiB,IAAIV,SAASP,KAAKQ,MAAL,GAAc,GAAvB,IAA8BA,MAAtC;AACAR,iBAAKc,CAAL,GAASd,KAAKa,KAAL,CAAWC,CAAX,GAAeG,CAAxB;AACAjB,iBAAKe,CAAL,GAASf,KAAKa,KAAL,CAAWE,CAAX,GAAe,GAAxB;AACH,SAJM,MAIA;AACH,gBAAIE,IAAIV,SAASP,KAAKQ,MAAL,GAAc,GAAvB,IAA8BA,MAAtC;AACAR,iBAAKc,CAAL,GAASd,KAAKa,KAAL,CAAWC,CAAX,GAAeG,CAAxB;AACAjB,iBAAKe,CAAL,GAASf,KAAKa,KAAL,CAAWE,CAAX,GAAe,GAAxB;AACH;AACDZ,YAAIe,SAAJ;AACAf,YAAIgB,wBAAJ,GAA+B,aAA/B;AACAhB,YAAIiB,SAAJ,GAAgB,MAAhB;AACAjB,YAAIkB,GAAJ,CAAQrB,KAAKc,CAAb,EAAgBd,KAAKe,CAArB,EAAwB,EAAxB,EAA4B,CAA5B,EAA+B,IAAI5B,KAAKmC,EAAxC;AACAnB,YAAIoB,IAAJ;AACApB,YAAIqB,WAAJ,GAAkB,MAAlB;AACArB,YAAIkB,GAAJ,CAAQrB,KAAKc,CAAb,EAAgBd,KAAKe,CAArB,EAAwB,EAAxB,EAA4B,CAA5B,EAA+B,IAAI5B,KAAKmC,EAAxC;AACAnB,YAAIsB,MAAJ;AACAtB,YAAIuB,SAAJ;;AAEAvB,YAAIiB,SAAJ,GAAgB,MAAhB;AACAjB,YAAIwB,QAAJ,CAAa3B,KAAKH,GAAlB,EAAuBG,KAAKc,CAA5B,EAA+Bd,KAAKe,CAAL,GAAS,CAAxC;;AAEAZ,YAAIe,SAAJ;AACAf,YAAIgB,wBAAJ,GAA+B,kBAA/B;AACA,YAAInB,KAAKa,KAAT,EAAgB;AACZV,gBAAIyB,MAAJ,CAAW5B,KAAKc,CAAhB,EAAmBd,KAAKe,CAAxB;AACAZ,gBAAI0B,MAAJ,CAAW7B,KAAKa,KAAL,CAAWC,CAAtB,EAAyBd,KAAKa,KAAL,CAAWE,CAApC;AACH;AACDZ,YAAIsB,MAAJ;AACAtB,YAAIuB,SAAJ;;AAEAd,cAAMZ,KAAKgB,MAAX;AACAJ,cAAMZ,KAAK8B,MAAX;AACH;AACJ;;AAED,SAASC,aAAT,GAAyB;AACrBzD,YAAQC,GAAR,CAAY,iBAAZ,EAA+B,WAA/B;AACA,QAAIC,IAAIC,KAAKC,GAAL,EAAR;AACA,QAAIsD,YAAY,UAASC,IAAT,EAAcC,IAAd,EAAoB;AAChC,eAAOD,KAAKpC,GAAL,GAAWqC,KAAKrC,GAAvB;AACH,KAFD;AAGA,QAAIlB,OAAO,IAAIC,wDAAJ,CAAYoD,SAAZ,CAAX;AACA,QAAInD,OAAO,EAAX;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,IAArB,EAA2BC,GAA3B,EAAgC;AAC5B,YAAIe,MAAM,EAACA,KAAKf,CAAN,EAAV;AACAH,aAAKI,MAAL,CAAYc,GAAZ,EAAiB,UAAUf,CAA3B;AACH;AACDR,YAAQC,GAAR,CAAYI,IAAZ;AACAL,YAAQC,GAAR,CAAY,0CAAZ;;AAEAD,YAAQC,GAAR,CAAY,iBAAZ;AACAD,YAAQC,GAAR,CAAYI,KAAKc,MAAL,CAAY,EAACI,KAAK,CAAN,EAAZ,CAAZ;;AAEAvB,YAAQC,GAAR,CAAY,iBAAZ;AACAI,SAAKW,MAAL,CAAY,EAACO,KAAK,CAAN,EAAZ;AACAvB,YAAQC,GAAR,CAAYI,IAAZ;AACH;;AAEDN;AACAW;AACAO;AACAG;AACAqC;AACA9B,O;;;;;;;ACrLA;;;;;;AAMA,SAASkC,OAAT,CAAiBtC,GAAjB,EAAsBuC,IAAtB,EAA4BC,OAA5B,EAAqC;AACjC,SAAKxC,GAAL,GAAWA,GAAX,CADiC,CACjB;AAChB,SAAKmB,MAAL,GAAc,IAAd,CAFiC,CAEb;AACpB,SAAKc,MAAL,GAAc,IAAd,CAHiC,CAGb;AACpB,SAAK/B,GAAL,GAAW,IAAX,CAJiC,CAIhB;AACjB,SAAKD,IAAL,GAAY,IAAZ,CALiC,CAKf;AAClB,SAAKe,KAAL,GAAa,IAAb,CANiC,CAMd;AACnB,SAAKL,MAAL,GAAc,CAAd,CAPiC,CAOhB;AACjB,QAAI6B,OAAJ,EAAa;AAAE;AACX,aAAK,IAAIxC,GAAT,IAAgBuC,IAAhB,EAAsB;AAClB,iBAAKvC,GAAL,IAAYuC,KAAKvC,GAAL,CAAZ;AACH;AACJ,KAJD,MAIO;AACH,aAAKuC,IAAL,GAAYA,IAAZ,CADG,CACe;AACrB;AACJ;;AAED;;;;;AAKA,SAASxD,OAAT,CAAiBoD,SAAjB,EAA4BK,OAA5B,EAAqC;AACjC,SAAKnC,IAAL,GAAY,IAAZ;AACA,SAAKP,KAAL,GAAa,IAAb,CAFiC,CAEd;AACnB,SAAKC,IAAL,GAAY,IAAZ,CAHiC,CAGf;AAClB,SAAKoC,SAAL,GAAiBA,aAAa,UAASC,IAAT,EAAeC,IAAf,EAAqB;AAAE,eAAOD,OAAOC,IAAd;AAAqB,KAA1E;AACA,SAAKG,OAAL,GAAeA,OAAf;AACH;;AAED,IAAIC,SAAS1D,QAAQ2D,SAArB;;AAEA;;;;;;AAMAD,OAAOvD,MAAP,GAAgB,UAASc,GAAT,EAAcuC,IAAd,EAAoB;AAChC,QAAIpC,OAAO,IAAImC,OAAJ,CAAYtC,GAAZ,EAAiBuC,IAAjB,EAAuB,KAAKC,OAA5B,CAAX;AACA,QAAI,CAAC,KAAKnC,IAAV,EAAgB;AACZ,aAAKA,IAAL,GAAYF,IAAZ;AACA,aAAKL,KAAL,GAAa,KAAKO,IAAlB;AACA,aAAKN,IAAL,GAAY,KAAKM,IAAjB;AACA,eAAOF,IAAP;AACH;AACD,QAAIwC,SAAS,KAAKC,OAAL,CAAa,KAAKvC,IAAlB,EAAwBF,IAAxB,CAAb;AACA,QAAIwC,MAAJ,EAAY;AACR,YAAI,KAAKR,SAAL,CAAe,KAAKrC,KAAL,CAAWE,GAA1B,EAA+BA,GAA/B,IAAsC,CAA1C,EAA6C;AACzC,iBAAKF,KAAL,GAAaK,IAAb;AACH;AACD,YAAI,KAAKgC,SAAL,CAAe,KAAKpC,IAAL,CAAUC,GAAzB,EAA8BA,GAA9B,IAAqC,CAAzC,EAA4C;AACxC,iBAAKD,IAAL,GAAYI,IAAZ;AACH;AACJ;AACDwC,aAASA,UAAUxC,IAAnB;AACA,WAAOwC,MAAP;AACH,CAnBD;;AAqBA;;;;;;AAMAF,OAAOhD,MAAP,GAAgB,UAASO,GAAT,EAAc6C,KAAd,EAAqB;AACjC,QAAIF,SAAS,EAAb;AACA,QAAIG,UAAU,KAAKC,OAAL,CAAa,KAAK1C,IAAlB,EAAwBL,GAAxB,CAAd;AACA,WAAO8C,OAAP,EAAgB;AACZH,eAAOtD,IAAP,CAAYyD,OAAZ;AACA,YAAIA,QAAQ5C,GAAZ,EAAiB;AACb4C,oBAAQ5C,GAAR,CAAYD,IAAZ,GAAmB6C,QAAQ7C,IAA3B;AACH,SAFD,MAEO;AACH,iBAAKH,KAAL,GAAagD,QAAQ7C,IAArB;AACH;AACD,YAAI6C,QAAQ7C,IAAZ,EAAkB;AACd6C,oBAAQ7C,IAAR,CAAaC,GAAb,GAAmB4C,QAAQ5C,GAA3B;AACH,SAFD,MAEO;AACH,iBAAKH,IAAL,GAAY+C,QAAQ5C,GAApB;AACH;AACD,YAAI2C,KAAJ,EAAW;AACPC,sBAAU,KAAKC,OAAL,CAAa,KAAK1C,IAAlB,EAAwBL,GAAxB,CAAV;AACH,SAFD,MAEO;AACH2C,qBAASG,OAAT;AACA;AACH;AACJ;AACD,QAAI,CAAC,KAAKzC,IAAV,EAAgB;AACZ,aAAKP,KAAL,GAAa,IAAb;AACA,aAAKC,IAAL,GAAY,IAAZ;AACH;AACD,WAAO4C,MAAP;AACH,CA3BD;;AA6BA;;;;;;AAMAF,OAAO7C,MAAP,GAAgB,UAASI,GAAT,EAAc6C,KAAd,EAAqB;AACjC,QAAIF,SAAS,EAAb;AACA,QAAIG,UAAU,KAAKE,OAAL,CAAa,KAAK3C,IAAlB,EAAwBL,GAAxB,CAAd;AACA,QAAI6C,KAAJ,EAAW;AACP,eAAOC,OAAP,EAAgB;AACZH,mBAAOtD,IAAP,CAAYyD,OAAZ;AACA,gBAAIA,QAAQ7C,IAAR,IAAgB,KAAKkC,SAAL,CAAeW,QAAQ7C,IAAR,CAAaD,GAA5B,EAAiC8C,QAAQ9C,GAAzC,CAApB,EAAmE;AAC/D8C,0BAAUA,QAAQ7C,IAAlB;AACH,aAFD,MAEO;AACH;AACH;AACJ;AACJ,KATD,MASO;AACH0C,iBAASG,OAAT;AACH;AACD,WAAOH,MAAP;AACH,CAhBD;;AAkBA;;;;;;AAMAF,OAAOG,OAAP,GAAiB,UAASvC,IAAT,EAAeF,IAAf,EAAqB;AAClC,QAAI,KAAKgC,SAAL,CAAe9B,KAAKL,GAApB,EAAyBG,KAAKH,GAA9B,KAAsC,CAA1C,EAA6C;AACzC,eAAO,KAAP;AACH,KAFD,MAEO,IAAI,KAAKmC,SAAL,CAAe9B,KAAKL,GAApB,EAAyBG,KAAKH,GAA9B,IAAqC,CAAzC,EAA4C;AAAE;AACjD,YAAIK,KAAKc,MAAT,EAAiB;AAAE;AACf,gBAAI,CAAC,KAAKyB,OAAL,CAAavC,KAAKc,MAAlB,EAA0BhB,IAA1B,CAAL,EAAsC;AAClC,uBAAO,KAAP;AACH;AACD,iBAAK8C,aAAL,CAAmB5C,IAAnB;AACH,SALD,MAKO;AAAE;AACLA,iBAAKc,MAAL,GAAchB,IAAd;AACAA,iBAAKa,KAAL,GAAaX,IAAb;AACH;AACJ,KAVM,MAUA;AAAE;AACL,YAAIA,KAAK4B,MAAT,EAAiB;AAAE;AACf,gBAAI,CAAC,KAAKW,OAAL,CAAavC,KAAK4B,MAAlB,EAA0B9B,IAA1B,CAAL,EAAsC;AAClC,uBAAO,KAAP;AACH;AACD,iBAAK8C,aAAL,CAAmB5C,IAAnB;AACH,SALD,MAKO;AAAE;AACLA,iBAAK4B,MAAL,GAAc9B,IAAd;AACAA,iBAAKa,KAAL,GAAaX,IAAb;AACH;AACJ;AACD;AACA,QAAI,CAACF,KAAKF,IAAN,IAAc,KAAKkC,SAAL,CAAe9B,KAAKL,GAApB,EAAyBG,KAAKH,GAA9B,IAAqC,CAAvD,EAA0D;AACtDG,aAAKF,IAAL,GAAYI,IAAZ;AACAA,aAAKH,GAAL,GAAWC,IAAX;AACH,KAHD,MAGO,IAAI,CAACA,KAAKD,GAAN,IAAa,KAAKiC,SAAL,CAAe9B,KAAKL,GAApB,EAAyBG,KAAKH,GAA9B,IAAqC,CAAtD,EAAyD;AAC5DG,aAAKD,GAAL,GAAWG,IAAX;AACAA,aAAKJ,IAAL,GAAYE,IAAZ;AACH;AACD;AACA,SAAK+C,UAAL,CAAgB7C,IAAhB;;AAEA,WAAO,IAAP;AACH,CApCD;;AAsCA;;;;;;AAMAoC,OAAOM,OAAP,GAAiB,UAAS1C,IAAT,EAAeL,GAAf,EAAoB;AACjC,QAAI,CAACK,IAAL,EAAW;AACP,eAAO,KAAP;AACH;AACD,QAAI,KAAK8B,SAAL,CAAe9B,KAAKL,GAApB,EAAyBA,GAAzB,KAAiC,CAArC,EAAwC;AACpC,YAAI,CAACK,KAAKc,MAAN,IAAgB,CAACd,KAAK4B,MAA1B,EAAkC;AAAE;AAChC,gBAAI,KAAK5B,IAAL,IAAaA,IAAjB,EAAuB;AACnB,qBAAKA,IAAL,GAAY,IAAZ;AACH,aAFD,MAEO;AACH,oBAAIA,KAAKW,KAAL,CAAWG,MAAX,IAAqBd,IAAzB,EAA+B;AAC3BA,yBAAKW,KAAL,CAAWG,MAAX,GAAoB,IAApB;AACH,iBAFD,MAEO;AACHd,yBAAKW,KAAL,CAAWiB,MAAX,GAAoB,IAApB;AACH;AACD,qBAAKiB,UAAL,CAAgB7C,KAAKW,KAArB;AACH;AACD,mBAAOX,IAAP;AACH,SAZD,MAYO,IAAI,CAACA,KAAKc,MAAN,IAAgB,CAACd,KAAK4B,MAA1B,EAAkC;AAAE;AACvC,gBAAIkB,QAAQ9C,KAAKc,MAAL,IAAed,KAAK4B,MAAhC;AACA,gBAAI,KAAK5B,IAAL,IAAaA,IAAjB,EAAuB;AACnB,qBAAKA,IAAL,GAAY8C,KAAZ;AACA,qBAAK9C,IAAL,CAAUW,KAAV,GAAkB,IAAlB;AACH,aAHD,MAGO;AACH,oBAAIX,KAAKW,KAAL,CAAWG,MAAX,IAAqBd,IAAzB,EAA+B;AAC3BA,yBAAKW,KAAL,CAAWG,MAAX,GAAoBgC,KAApB;AACH,iBAFD,MAEO;AACH9C,yBAAKW,KAAL,CAAWiB,MAAX,GAAoBkB,KAApB;AACH;AACDA,sBAAMnC,KAAN,GAAcX,KAAKW,KAAnB;AACA,qBAAKkC,UAAL,CAAgB7C,KAAKW,KAArB;AACH;AACD,mBAAOX,IAAP;AACH,SAfM,MAeA,IAAI,KAAK+C,UAAL,CAAgB/C,KAAKc,MAArB,IAA+B,KAAKiC,UAAL,CAAgB/C,KAAK4B,MAArB,CAAnC,EAAiE;AAAE;AACtE,gBAAIA,SAAS5B,KAAKc,MAAL,CAAYc,MAAzB;AACA,gBAAId,SAASd,KAAKc,MAAlB;AACA,mBAAOc,UAAUA,OAAOA,MAAxB,EAAgC;AAC5BA,yBAASA,OAAOA,MAAhB;AACH;AACD,gBAAI,CAACA,MAAL,EAAa;AACTA,yBAASd,MAAT;AACH;AACD;AACA,iBAAKkC,OAAL,CAAahD,IAAb,EAAmB4B,MAAnB;AACA;AACA,gBAAIU,SAAS,KAAKI,OAAL,CAAa1C,KAAKc,MAAlB,EAA0BnB,GAA1B,CAAb;AACA,mBAAO2C,MAAP;AACH,SAdM,MAcA;AAAE;AACL,gBAAIxB,SAASd,KAAK4B,MAAL,CAAYd,MAAzB;AACA,gBAAIc,SAAS5B,KAAK4B,MAAlB;AACA,mBAAOd,UAAUA,OAAOA,MAAxB,EAAgC;AAC5BA,yBAASA,OAAOA,MAAhB;AACH;AACD,gBAAI,CAACA,MAAL,EAAa;AACTA,yBAASc,MAAT;AACH;AACD;AACA,iBAAKoB,OAAL,CAAahD,IAAb,EAAmBc,MAAnB;AACA;AACA,gBAAIwB,SAAS,KAAKI,OAAL,CAAa1C,KAAK4B,MAAlB,EAA0BjC,GAA1B,CAAb;AACA,mBAAO2C,MAAP;AACH;AACJ,KAzDD,MAyDO,IAAI,KAAKR,SAAL,CAAe9B,KAAKL,GAApB,EAAyBA,GAAzB,IAAgC,CAApC,EAAuC;AAAE;AAC5C,YAAI2C,SAAS,KAAKI,OAAL,CAAa1C,KAAKc,MAAlB,EAA0BnB,GAA1B,CAAb;AACA,YAAI,CAAC2C,MAAL,EAAa;AACT,mBAAO,KAAP;AACH;AACD,aAAKM,aAAL,CAAmB5C,IAAnB;AACA,aAAK6C,UAAL,CAAgB7C,IAAhB;AACA,eAAOsC,MAAP;AACH,KARM,MAQA;AAAE;AACL,YAAIA,SAAS,KAAKI,OAAL,CAAa1C,KAAK4B,MAAlB,EAA0BjC,GAA1B,CAAb;AACA,YAAI,CAAC2C,MAAL,EAAa;AACT,mBAAO,KAAP;AACH;AACD,aAAKM,aAAL,CAAmB5C,IAAnB;AACA,aAAK6C,UAAL,CAAgB7C,IAAhB;AACA,eAAOsC,MAAP;AACH;AACJ,CA9ED;;AAgFA;;;;;;AAMAF,OAAOO,OAAP,GAAiB,UAAS3C,IAAT,EAAeL,GAAf,EAAoB;AACjC,QAAI,CAACK,IAAL,EAAW;AACP,eAAO,KAAP;AACH;AACD,QAAI,KAAK8B,SAAL,CAAe9B,KAAKL,GAApB,EAAyBA,GAAzB,KAAiC,CAArC,EAAwC;AACpC,eAAOK,IAAP;AACH,KAFD,MAEO,IAAI,KAAK8B,SAAL,CAAe9B,KAAKL,GAApB,EAAyBA,GAAzB,IAAgC,CAApC,EAAuC;AAC1C,eAAO,KAAKgD,OAAL,CAAa3C,KAAKc,MAAlB,EAA0BnB,GAA1B,CAAP;AACH,KAFM,MAEA;AACH,eAAO,KAAKgD,OAAL,CAAa3C,KAAK4B,MAAlB,EAA0BjC,GAA1B,CAAP;AACH;AACJ,CAXD;;AAaA;AACAyC,OAAOa,QAAP,GAAkB,UAASnD,IAAT,EAAe;AAC7B,QAAIoD,KAAKpD,KAAK8B,MAAd;AACAsB,OAAGvC,KAAH,GAAWb,KAAKa,KAAhB;AACAb,SAAK8B,MAAL,GAAcsB,GAAGpC,MAAjB;AACAoC,OAAGpC,MAAH,KAAcoC,GAAGpC,MAAH,CAAUH,KAAV,GAAkBb,IAAhC;AACAoD,OAAGpC,MAAH,GAAYhB,IAAZ;AACA,QAAIA,QAAQ,KAAKE,IAAjB,EAAuB;AACnB,aAAKA,IAAL,GAAYkD,EAAZ;AACH,KAFD,MAEO,IAAIpD,KAAKa,KAAT,EAAgB;AACnB,YAAIb,KAAKa,KAAL,CAAWG,MAAX,IAAqBhB,IAAzB,EAA+B;AAC3BA,iBAAKa,KAAL,CAAWG,MAAX,GAAoBoC,EAApB;AACH,SAFD,MAEO;AACHpD,iBAAKa,KAAL,CAAWiB,MAAX,GAAoBsB,EAApB;AACH;AACJ;AACDpD,SAAKa,KAAL,GAAauC,EAAb;AACA,SAAKL,UAAL,CAAgB/C,IAAhB;AACA,SAAK+C,UAAL,CAAgBK,EAAhB;AACH,CAlBD;;AAoBA;AACAd,OAAOe,QAAP,GAAkB,UAASrD,IAAT,EAAe;AAC7B,QAAIsD,KAAKtD,KAAKgB,MAAd;AACAsC,OAAGzC,KAAH,GAAWb,KAAKa,KAAhB;AACAb,SAAKgB,MAAL,GAAcsC,GAAGxB,MAAjB;AACAwB,OAAGxB,MAAH,KAAcwB,GAAGxB,MAAH,CAAUjB,KAAV,GAAkBb,IAAhC;AACAsD,OAAGxB,MAAH,GAAY9B,IAAZ;AACA,QAAIA,QAAQ,KAAKE,IAAjB,EAAuB;AACnB,aAAKA,IAAL,GAAYoD,EAAZ;AACH,KAFD,MAEO,IAAItD,KAAKa,KAAT,EAAgB;AACnB,YAAIb,KAAKa,KAAL,CAAWG,MAAX,IAAqBhB,IAAzB,EAA+B;AAC3BA,iBAAKa,KAAL,CAAWG,MAAX,GAAoBsC,EAApB;AACH,SAFD,MAEO;AACHtD,iBAAKa,KAAL,CAAWiB,MAAX,GAAoBwB,EAApB;AACH;AACJ;AACDtD,SAAKa,KAAL,GAAayC,EAAb;AACA,SAAKP,UAAL,CAAgB/C,IAAhB;AACA,SAAK+C,UAAL,CAAgBO,EAAhB;AACH,CAlBD;;AAoBA;AACAhB,OAAOiB,SAAP,GAAmB,UAASvD,IAAT,EAAe;AAC9B,SAAKmD,QAAL,CAAcnD,KAAKgB,MAAnB;AACA,WAAO,KAAKqC,QAAL,CAAcrD,IAAd,CAAP;AACH,CAHD;;AAKA;AACAsC,OAAOkB,SAAP,GAAmB,UAASxD,IAAT,EAAe;AAC9B,SAAKqD,QAAL,CAAcrD,KAAK8B,MAAnB;AACA,WAAO,KAAKqB,QAAL,CAAcnD,IAAd,CAAP;AACH,CAHD;;AAKA;;;;;AAKAsC,OAAOY,OAAP,GAAiB,UAASO,KAAT,EAAgBC,KAAhB,EAAuB;AACpC,QAAIC,QAAQ,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,QAA1B,EAAoC,OAApC,EAA6C,QAA7C,CAAZ;AACA,SAAK,IAAI9D,GAAT,IAAgB4D,KAAhB,EAAuB;AACnB,YAAIE,MAAMtE,OAAN,CAAcQ,GAAd,KAAsB,CAAC,CAA3B,EAA8B;AAC1BqD,oBAAQrD,GAAR;AACH;AACJ;;AAED,aAASqD,OAAT,CAAiBrD,GAAjB,EAAsB;AAClB,YAAIL,MAAMiE,MAAM5D,GAAN,CAAV;AACA4D,cAAM5D,GAAN,IAAa6D,MAAM7D,GAAN,CAAb;AACA6D,cAAM7D,GAAN,IAAaL,GAAb;AACH;AACJ,CAbD;;AAeA;AACA8C,OAAOQ,aAAP,GAAuB,UAAS9C,IAAT,EAAe;AAClC,QAAIA,KAAK8B,MAAL,IAAgB,KAAKmB,UAAL,CAAgBjD,KAAK8B,MAArB,IAA+B,KAAKmB,UAAL,CAAgBjD,KAAKgB,MAArB,CAA/B,IAA+D,CAAnF,EAAuF;AAAE;AACrF,YAAIoC,KAAKpD,KAAK8B,MAAd;AACA,YAAI,KAAKmB,UAAL,CAAgBjD,KAAK8B,MAAL,CAAYA,MAA5B,IAAsC,KAAKmB,UAAL,CAAgBjD,KAAK8B,MAAL,CAAYd,MAA5B,CAA1C,EAA+E;AAAE;AAC7E,iBAAKmC,QAAL,CAAcnD,IAAd;AACH,SAFD,MAEO;AAAE;AACL,iBAAKwD,SAAL,CAAexD,IAAf;AACH;AACJ,KAPD,MAOO,IAAIA,KAAKgB,MAAL,IAAgB,KAAKiC,UAAL,CAAgBjD,KAAKgB,MAArB,IAA+B,KAAKiC,UAAL,CAAgBjD,KAAK8B,MAArB,CAA/B,IAA+D,CAAnF,EAAuF;AAAE;AAC5F,YAAIwB,KAAKtD,KAAKgB,MAAd;AACA,YAAI,KAAKiC,UAAL,CAAgBjD,KAAKgB,MAAL,CAAYA,MAA5B,IAAsC,KAAKiC,UAAL,CAAgBjD,KAAKgB,MAAL,CAAYc,MAA5B,CAA1C,EAA+E;AAAE;AAC7E,iBAAKuB,QAAL,CAAcrD,IAAd;AACH,SAFD,MAEO;AAAE;AACL,iBAAKuD,SAAL,CAAevD,IAAf;AACH;AACJ;AACJ,CAhBD;;AAkBA;AACAsC,OAAOW,UAAP,GAAoB,UAASjD,IAAT,EAAe;AAC/B,QAAI,CAACA,IAAL,EAAW;AACP,eAAO,CAAP;AACH;AACD,WAAOA,KAAKQ,MAAZ;AACH,CALD;;AAOA;AACA8B,OAAOS,UAAP,GAAoB,UAAS/C,IAAT,EAAe;AAC/B,QAAIQ,SAASrB,KAAKyE,GAAL,CAAS,KAAKX,UAAL,CAAgBjD,KAAKgB,MAArB,CAAT,EAAuC,KAAKiC,UAAL,CAAgBjD,KAAK8B,MAArB,CAAvC,IAAuE,CAApF;AACA;AACA,QAAI,CAAC9B,KAAKgB,MAAN,IAAgB,CAAChB,KAAK8B,MAA1B,EAAkC;AAC9BtB,iBAAS,CAAT;AACH;AACDR,SAAKQ,MAAL,GAAcA,MAAd;AACH,CAPD;;AASAqD,WAAWA,OAAOjF,OAAP,GAAiBA,OAA5B;;AAEeA,gEAAf,E","file":"main.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7790f42fc0259a0263b9","import AVLTree from '../avl.js';\r\n\r\nfunction testInsert() {\r\n    console.log('%ctestInsert', 'color:red');\r\n    var t = Date.now();\r\n    var tree = new AVLTree();\r\n    var size = 100000;\r\n    for (var i = 1; i <= size; i++) {\r\n        tree.insert(i, 'data_' + i);\r\n    }\r\n    console.log(tree);\r\n    console.log('cost', Date.now() - t);\r\n    console.log('----------------------------------------');\r\n}\r\n\r\nfunction testDelete() {\r\n    console.log('%ctestDelete', 'color:red');\r\n    var tree = new AVLTree();\r\n    var size = 10000;\r\n    for (var i = 1; i <= size; i++) {\r\n        tree.insert(i, 'data_' + i);\r\n    }\r\n    var retains = [];\r\n    //只保留4个随机数目\r\n    for (var i = 0; i < 4; i++) {\r\n        retains.push((Math.random() * size) >> 0);\r\n    }\r\n    console.log('retains', retains);\r\n    for (var i = 1; i <= size; i++) {\r\n        if (retains.indexOf(i) == -1) {\r\n            tree.delete(i);\r\n        }\r\n    }\r\n    console.log(tree);\r\n    console.log('----------------------------------------');\r\n}\r\n\r\nfunction testSeach() {\r\n    console.log('%ctestSeach', 'color:red');\r\n    var tree = new AVLTree();\r\n    var size = 10000;\r\n    for (var i = 1; i <= size; i++) {\r\n        tree.insert(i, 'data_' + i);\r\n    }\r\n    for (var i = 0; i < 4; i++) {\r\n        var tmp = (Math.random() * size) >> 0;\r\n        console.log('key', tmp, tree.search(tmp));\r\n    }\r\n    console.log('----------------------------------------');\r\n}\r\n\r\nfunction testPreNext() {\r\n    console.log('%ctestPreNext', 'color:red');\r\n    var tree = new AVLTree();\r\n    var size = 10000;\r\n    for (var i = 1; i <= size; i++) {\r\n        tree.insert(i, 'data_' + i);\r\n    }\r\n    var tmp = (Math.random() * size) >> 0;\r\n    var first = tree.search(tmp);\r\n    var last = first;\r\n    tmp = [];\r\n\r\n    console.log('next');\r\n    for (var i = 0; first && i < 5; i++) {\r\n        tmp.push(first.key);\r\n        first = first.next;\r\n    }\r\n    console.log(tmp);\r\n\r\n    console.log('pre');\r\n    tmp = [];\r\n    for (var i = 0; last && i < 5; i++) {\r\n        tmp.push(last.key);\r\n        last = last.pre;\r\n    }\r\n    console.log(tmp);\r\n\r\n    var tmp = (Math.random() * size) >> 0;\r\n    console.log('after delete', tmp);\r\n    tree.delete(tmp);\r\n    var node = tree.search(tmp + 1);\r\n    tmp = [];\r\n    tmp.push(node.pre && node.pre.pre && node.pre.pre.key);\r\n    tmp.push(node.pre && node.pre.key);\r\n    tmp.push(node.key);\r\n    tmp.push(node.next && node.next.key);\r\n    tmp.push(node.next && node.next.next && node.next.next.key);\r\n    console.log(tmp);\r\n    console.log('----------------------------------------');\r\n}\r\n\r\n//draw tree\r\nfunction draw() {\r\n    console.log('%cdraw', 'color:red');\r\n    var tree = new AVLTree();\r\n    var size = 20;\r\n    for (var i = 1; i <= size; i++) {\r\n        tree.insert(i, 'data_' + i);\r\n    }\r\n    console.log(tree.root);\r\n    var ctx = document.querySelector('#canvas').getContext('2d');\r\n    var width = 150;\r\n    var height = tree.root.height;\r\n    ctx.lineWidth = 2;\r\n    ctx.font = \"12px bold\";\r\n    ctx.textAlign = 'center';\r\n    _draw(tree.root);\r\n    console.log('----------------------------------------');\r\n\r\n    function _draw(node) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        if (!node.pNode) {\r\n            node.x = 400;\r\n            node.y = 40;\r\n        } else if (node.pNode.lChild == node) {\r\n            var w = width * (node.height + 0.6) / height;\r\n            node.x = node.pNode.x - w;\r\n            node.y = node.pNode.y + 100;\r\n        } else {\r\n            var w = width * (node.height + 0.6) / height;\r\n            node.x = node.pNode.x + w;\r\n            node.y = node.pNode.y + 100;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.globalCompositeOperation = \"source-over\";\r\n        ctx.fillStyle = \"#fff\";\r\n        ctx.arc(node.x, node.y, 12, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.strokeStyle = \"#000\";\r\n        ctx.arc(node.x, node.y, 12, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = \"#000\";\r\n        ctx.fillText(node.key, node.x, node.y + 4);\r\n\r\n        ctx.beginPath();\r\n        ctx.globalCompositeOperation = \"destination-over\";\r\n        if (node.pNode) {\r\n            ctx.moveTo(node.x, node.y);\r\n            ctx.lineTo(node.pNode.x, node.pNode.y);\r\n        }\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        _draw(node.lChild);\r\n        _draw(node.rChild);\r\n    }\r\n}\r\n\r\nfunction testCompartor() {\r\n    console.log('%ctestCompartor', 'color:red');\r\n    var t = Date.now();\r\n    var compartor = function(arg1,arg2) {\r\n        return arg1.key - arg2.key\r\n    }\r\n    var tree = new AVLTree(compartor);\r\n    var size = 10;\r\n    for (var i = 1; i <= size; i++) {\r\n        var key = {key: i};\r\n        tree.insert(key, 'data_' + i);\r\n    }\r\n    console.log(tree);\r\n    console.log('----------------------------------------');\r\n\r\n    console.log('search {key: 5}');\r\n    console.log(tree.search({key: 5}));\r\n\r\n    console.log('delete {key: 5}');\r\n    tree.delete({key: 5});\r\n    console.log(tree);\r\n}\r\n\r\ntestInsert();\r\ntestDelete();\r\ntestSeach();\r\ntestPreNext();\r\ntestCompartor();\r\ndraw();\n\n\n// WEBPACK FOOTER //\n// ./src/example/main.js","/**\n * 插入节点\n * @param  {[type]} key  节点的key\n * @param  {[type]} data 节点的数据\n * @return {Boolean}     是否将插入的数据合并到节点\n */\nfunction AVLNode(key, data, ifMerge) {\n    this.key = key; //查找关键字\n    this.lChild = null; //左子树\n    this.rChild = null; //右子树\n    this.pre = null; //中序前一个节点\n    this.next = null; //中序后一个节点\n    this.pNode = null; //父节点\n    this.height = 0; //节点的高度\n    if (ifMerge) { //将插入的数据合并到节点\n        for (var key in data) {\n            this[key] = data[key];\n        }\n    } else {\n        this.data = data; //节点数据\n    }\n}\n\n/**\n * 二叉平衡树\n * @param {Function} compartor 关键字的比较器\n * @param {Boolean}  ifMerge   是否将插入的数据合并到节点\n */\nfunction AVLTree(compartor, ifMerge) {\n    this.root = null;\n    this.first = null; //最小的节点\n    this.last = null; //最大的节点\n    this.compartor = compartor || function(arg1, arg2) { return arg1 - arg2; };\n    this.ifMerge = ifMerge;\n}\n\nvar _proto = AVLTree.prototype;\n\n/**\n * 插入节点\n * @param  {[type]} key  节点的key\n * @param  {[type]} data 节点的数据\n * @return {Boolean}     插入是否成功\n */\n_proto.insert = function(key, data) {\n    var node = new AVLNode(key, data, this.ifMerge);\n    if (!this.root) {\n        this.root = node;\n        this.first = this.root;\n        this.last = this.root;\n        return node;\n    }\n    var result = this._insert(this.root, node);\n    if (result) {\n        if (this.compartor(this.first.key, key) > 0) {\n            this.first = node;\n        }\n        if (this.compartor(this.last.key, key) < 0) {\n            this.last = node;\n        }\n    }\n    result = result && node;\n    return result;\n}\n\n/**\n * 删除节点\n * @param  {[type]}   key     需要删除的节点的key\n * @param  {Boolean}  ifAll   是否删除所有符合的结点（默认只删除第一个查找到的结果）\n * @return {Array|AVLNode}    被删除后的点\n */\n_proto.delete = function(key, ifAll) {\n    var result = [];\n    var _result = this._delete(this.root, key);\n    while (_result) {\n        result.push(_result);\n        if (_result.pre) {\n            _result.pre.next = _result.next;\n        } else {\n            this.first = _result.next;\n        }\n        if (_result.next) {\n            _result.next.pre = _result.pre;\n        } else {\n            this.last = _result.pre;\n        }\n        if (ifAll) {\n            _result = this._delete(this.root, key);\n        } else {\n            result = _result;\n            break;\n        }\n    }\n    if (!this.root) {\n        this.first = null;\n        this.last = null;\n    }\n    return result;\n}\n\n/**\n * 查找节点\n * @param  {[type]}   key     需要查找的节点的key\n * @param  {Boolean}  ifAll   是否返回所有结果（默认只返回第一个查找到的结果）\n * @return {Array|AVLNode}    查找结果\n */\n_proto.search = function(key, ifAll) {\n    var result = [];\n    var _result = this._search(this.root, key);\n    if (ifAll) {\n        while (_result) {\n            result.push(_result);\n            if (_result.next && this.compartor(_result.next.key, _result.key)) {\n                _result = _result.next;\n            } else {\n                break;\n            }\n        }\n    } else {\n        result = _result;\n    }\n    return result;\n}\n\n/**\n * 插入节点\n * @param  {AVLNode} root 子树的根节点\n * @param  {AVLNode} node 待插入的节点\n * @return {Boolean}      插入是否成功\n */\n_proto._insert = function(root, node) {\n    if (this.compartor(root.key, node.key) == 0) {\n        return false;\n    } else if (this.compartor(root.key, node.key) > 0) { //插入左子树\n        if (root.lChild) { //在左子树上递归插入\n            if (!this._insert(root.lChild, node)) {\n                return false;\n            }\n            this._checkBalance(root);\n        } else { //插入叶子节点\n            root.lChild = node;\n            node.pNode = root;\n        }\n    } else { //插入右子树\n        if (root.rChild) { //在右子树上递归插入\n            if (!this._insert(root.rChild, node)) {\n                return false;\n            }\n            this._checkBalance(root);\n        } else { //插入叶子节点\n            root.rChild = node;\n            node.pNode = root;\n        }\n    }\n    //生成中序遍历前后件关系\n    if (!node.next && this.compartor(root.key, node.key) > 0) {\n        node.next = root;\n        root.pre = node;\n    } else if (!node.pre && this.compartor(root.key, node.key) < 0) {\n        node.pre = root;\n        root.next = node;\n    }\n    //更新节点的高度\n    this._setHeight(root);\n\n    return true;\n}\n\n/**\n * 删除节点\n * @param  {AVLNode} root   子树的根节点 \n * @param  {[type]}  key    待删除的节点的key\n * @return {Boolean}        是否删除成功\n */\n_proto._delete = function(root, key) {\n    if (!root) {\n        return false;\n    }\n    if (this.compartor(root.key, key) == 0) {\n        if (!root.lChild && !root.rChild) { //叶子节点，直接删除\n            if (this.root == root) {\n                this.root = null;\n            } else {\n                if (root.pNode.lChild == root) {\n                    root.pNode.lChild = null;\n                } else {\n                    root.pNode.rChild = null;\n                }\n                this._setHeight(root.pNode);\n            }\n            return root;\n        } else if (!root.lChild || !root.rChild) { //没有右子树或者没有左子树\n            var child = root.lChild || root.rChild;\n            if (this.root == root) {\n                this.root = child;\n                this.root.pNode = null;\n            } else {\n                if (root.pNode.lChild == root) {\n                    root.pNode.lChild = child;\n                } else {\n                    root.pNode.rChild = child;\n                }\n                child.pNode = root.pNode;\n                this._setHeight(root.pNode);\n            }\n            return root;\n        } else if (this._getHeight(root.lChild) > this._getHeight(root.rChild)) { //用左子树上最大的节点代替root\n            var rChild = root.lChild.rChild;\n            var lChild = root.lChild;\n            while (rChild && rChild.rChild) {\n                rChild = rChild.rChild;\n            }\n            if (!rChild) {\n                rChild = lChild;\n            }\n            //交换root和lChild\n            this._change(root, rChild);\n            //保证删除的节点没有左子树，或者没有右子树，用来递归更新所有需要更新高度的节点\n            var result = this._delete(root.lChild, key);\n            return result;\n        } else { //用右子树上最小的节点代替root\n            var lChild = root.rChild.lChild;\n            var rChild = root.rChild;\n            while (lChild && lChild.lChild) {\n                lChild = lChild.lChild;\n            }\n            if (!lChild) {\n                lChild = rChild;\n            }\n            //交换root和lChild\n            this._change(root, lChild);\n            //保证删除的节点没有左子树，或者没有右子树，用来递归更新所有需要更新高度的节点\n            var result = this._delete(root.rChild, key);\n            return result;\n        }\n    } else if (this.compartor(root.key, key) > 0) { //在左子树上递归删除\n        var result = this._delete(root.lChild, key);\n        if (!result) {\n            return false;\n        }\n        this._checkBalance(root);\n        this._setHeight(root);\n        return result;\n    } else { //在右子树上删除\n        var result = this._delete(root.rChild, key);\n        if (!result) {\n            return false;\n        }\n        this._checkBalance(root);\n        this._setHeight(root);\n        return result;\n    }\n}\n\n/**\n * 搜索节点\n * @param  {AVLNode} root   子树的根节点 \n * @param  {[type]}  key    待查找的节点的key\n * @return {AVLNode}        查找结果\n */\n_proto._search = function(root, key) {\n    if (!root) {\n        return false;\n    }\n    if (this.compartor(root.key, key) == 0) {\n        return root;\n    } else if (this.compartor(root.key, key) > 0) {\n        return this._search(root.lChild, key);\n    } else {\n        return this._search(root.rChild, key);\n    }\n}\n\n//左旋转\n_proto._lRotate = function(node) {\n    var rc = node.rChild;\n    rc.pNode = node.pNode;\n    node.rChild = rc.lChild;\n    rc.lChild && (rc.lChild.pNode = node);\n    rc.lChild = node;\n    if (node == this.root) {\n        this.root = rc;\n    } else if (node.pNode) {\n        if (node.pNode.lChild == node) {\n            node.pNode.lChild = rc;\n        } else {\n            node.pNode.rChild = rc;\n        }\n    }\n    node.pNode = rc;\n    this._setHeight(node);\n    this._setHeight(rc);\n}\n\n//右旋转\n_proto._rRotate = function(node) {\n    var lc = node.lChild;\n    lc.pNode = node.pNode;\n    node.lChild = lc.rChild;\n    lc.rChild && (lc.rChild.pNode = node);\n    lc.rChild = node;\n    if (node == this.root) {\n        this.root = lc;\n    } else if (node.pNode) {\n        if (node.pNode.lChild == node) {\n            node.pNode.lChild = lc;\n        } else {\n            node.pNode.rChild = lc;\n        }\n    }\n    node.pNode = lc;\n    this._setHeight(node);\n    this._setHeight(lc);\n}\n\n//先左旋转，再右旋转\n_proto._lrRotate = function(node) {\n    this._lRotate(node.lChild);\n    return this._rRotate(node);\n}\n\n//先右旋转，再左旋转\n_proto._rlRotate = function(node) {\n    this._rRotate(node.rChild);\n    return this._lRotate(node);\n}\n\n/**\n * 交换两个节点\n * @param  {AVLNode} node1 \n * @param  {AVLNode} node2\n */\n_proto._change = function(node1, node2) {\n    var props = ['pre', 'next', 'lChild', 'rChild', 'pNode', 'height'];\n    for (var key in node1) {\n        if (props.indexOf(key) == -1) {\n            _change(key);\n        }\n    }\n\n    function _change(key) {\n        var tmp = node1[key];\n        node1[key] = node2[key];\n        node2[key] = tmp;\n    }\n}\n\n//检查并调整树\n_proto._checkBalance = function(node) {\n    if (node.rChild && (this._getHeight(node.rChild) - this._getHeight(node.lChild) == 2)) { //不平衡，需要调整\n        var rc = node.rChild;\n        if (this._getHeight(node.rChild.rChild) > this._getHeight(node.rChild.lChild)) { //左旋转\n            this._lRotate(node);\n        } else { //先右旋转，再左旋转\n            this._rlRotate(node);\n        }\n    } else if (node.lChild && (this._getHeight(node.lChild) - this._getHeight(node.rChild) == 2)) { //不平衡，需要调整\n        var lc = node.lChild;\n        if (this._getHeight(node.lChild.lChild) > this._getHeight(node.lChild.rChild)) { //右旋转\n            this._rRotate(node);\n        } else { //先左旋转，再右旋转\n            this._lrRotate(node);\n        }\n    }\n}\n\n//获取树的高度\n_proto._getHeight = function(node) {\n    if (!node) {\n        return 0;\n    }\n    return node.height;\n}\n\n//设置树的高度\n_proto._setHeight = function(node) {\n    var height = Math.max(this._getHeight(node.lChild), this._getHeight(node.rChild)) + 1;\n    //如果是叶子节点，不用加1\n    if (!node.lChild && !node.rChild) {\n        height = 0;\n    }\n    node.height = height;\n}\n\nwindow && (window.AVLTree = AVLTree);\n\nexport default AVLTree\n\n\n\n// WEBPACK FOOTER //\n// ./src/avl.js"],"sourceRoot":""}